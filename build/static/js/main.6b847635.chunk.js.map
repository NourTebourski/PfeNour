{"version":3,"sources":["StateProvider.js","firebase.js","upload.js","MessageSender.js","AddComment.js","Comments.js","Post.js","Feed.js","Header.js","Reducer.js","Login.js","SidebarRow.js","Sidebar.js","Widgets.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","storage","GoogleAuthProvider","Component","MessageSender","user","useState","input","setInput","imageInput","setImageInput","imageUrl","setImageUrl","inputFileRef","useRef","className","class","Avatar","src","photoURL","ref","id","hidden","type","onChange","e","target","files","reader","FileReader","file","readAsDataURL","onload","result","placeholder","displayName","style","width","onClick","preventDefault","uploadTask","child","name","put","on","TaskEvent","STATE_CHANGED","snapshot","error","getDownloadURL","then","url","collection","add","message","timestamp","FieldValue","serverTimestamp","profilePic","username","image","likes","textAlign","color","current","click","AddComment","console","log","inpu","setInpu","margin","doc","comment","Comments","Post","comments","setComments","useEffect","onSnapshot","docs","map","data","Date","toDate","toUTCString","alt","includes","update","arrayRemove","length","arrayUnion","key","Feed","posts","setPosts","orderBy","post","Header","fontSize","IconButton","actionTypes","SET_USER","state","action","Login","dispatch","Button","signInWithPopup","catch","alert","SidebarRow","Icon","title","Sidebar","LocalHospitalIcon","EmojiFlagsIcon","PeopleIcon","ChatIcon","StoreIcon","VideoLibraryIcon","ExpandMoreIcon","Widgets","height","border","overflow","scrolling","frameborder","allowtransparency","allow","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b847635.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n apiKey: \"AIzaSyAZfkAbJeVw3KTAlJIcIfF8mha8UK0MroM\",\r\n  authDomain: \"frameworkjsexam.firebaseapp.com\",\r\n  projectId: \"frameworkjsexam\",\r\n  storageBucket: \"frameworkjsexam.appspot.com\",\r\n  messagingSenderId: \"984528466251\",\r\n  appId: \"1:984528466251:web:cf74ef31409b73f56c78ce\",\r\n  measurementId: \"G-EE2RPX7N9R\",\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\nconst storage = firebase.storage()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nconst fire = firebase;\r\n\r\nexport { auth, provider,firebase }\r\nexport default db\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {firebase} from \"./firebase\"\r\n\r\nexport default class App extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      image: null,\r\n      progress:0,\r\n      downloadURL: null\r\n    }\r\n  }\r\n\r\n\r\n  handleChange = (e) =>{\r\n    if(e.target.files[0]){\r\n      this.setState({\r\n      image: e.target.files[0]\r\n    })\r\n  }\r\n    // console.log(e.target.files[0])\r\n}\r\n\r\nhandleUpload = () =>{\r\n  // console.log(this.state.image);\r\n  let file = this.state.image;\r\n  var storage = firebase.storage();\r\n  var storageRef = storage.ref();\r\n  var uploadTask = storageRef.child('folder/' + file.name).put(file);\r\n\r\n  uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n    (snapshot) =>{\r\n      var progress = Math.round((snapshot.bytesTransferred/snapshot.totalBytes))*100\r\n      this.setState({progress})\r\n    },(error) =>{\r\n      throw error\r\n    },() =>{\r\n      // uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) =>{\r\n\r\n      uploadTask.snapshot.ref.getDownloadURL().then((url) =>{\r\n        this.setState({\r\n          downloadURL: url\r\n        })\r\n      })\r\n    document.getElementById(\"file\").value = null\r\n\r\n   }\r\n ) \r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h4>upload image</h4>\r\n        <label>\r\n          Choose file\r\n        <input type=\"file\" id=\"file\" onChange={this.handleChange} />        \r\n        </label>\r\n\r\n        {this.state.progress}\r\n        <button className=\"button\" onClick={this.handleUpload}>Upload</button>\r\n        <img\r\n          className=\"ref\"\r\n          src={this.state.downloadURL || \"https://via.placeholder.com/400x300\"}\r\n          alt=\"Uploaded Images\"\r\n          height=\"300\"\r\n          width=\"400\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { useState,useRef } from 'react'\r\nimport { Avatar } from '@material-ui/core'\r\nimport './MessageSender.css'\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { useStateValue } from './StateProvider';\r\nimport db from './firebase'\r\nimport {firebase} from \"./firebase\"\r\nimport Upload from './upload';\r\nimport { AlternateEmail } from '@material-ui/icons';\r\n\r\nfunction MessageSender() {\r\n    const [{ user }, dispatch] = useStateValue()\r\n    const [input, setInput] = useState('')\r\n    const [imageInput, setImageInput] = useState(null)\r\n    const [imageUrl, setImageUrl] = useState('')\r\n const inputFileRef = useRef( null );\r\n  const onBtnClick = () => {\r\n    inputFileRef.current.click();\r\n  }\r\n  const handleSubmit = (e) =>{\r\n      e.preventDefault()\r\n    if(imageInput!=null)\r\n    {\r\n  let file = imageInput;\r\n  var storage = firebase.storage();\r\n  var storageRef = storage.ref();\r\n  var uploadTask = storageRef.child('folder/' + file.name).put(file);\r\n\r\n  uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED,\r\n    (snapshot) =>{\r\n      \r\n    },(error) =>{\r\n      throw error\r\n    },() =>{\r\n      // uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) =>{\r\n\r\n      uploadTask.snapshot.ref.getDownloadURL().then((url) =>{\r\n         db.collection('posts').add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            profilePic: user.photoURL,\r\n            username: user.displayName,\r\n            image: url,\r\n            likes:[]\r\n        })\r\n        setInput('')\r\n        setImageUrl('')\r\n        setImageInput(null)\r\n      })\r\n\r\n   }\r\n ) \r\n\r\n    }\r\n    else {\r\n        e.preventDefault()\r\n\r\n        db.collection('posts').add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            profilePic: user.photoURL,\r\n            username: user.displayName,\r\n            image: \"\"\r\n        })\r\n\r\n\r\n        setInput('')\r\n        setImageUrl('')\r\n        setImageInput(null)\r\n    }\r\n\r\n}\r\n   const handleChange = (e) =>{\r\n    if(e.target.files[0]){\r\n        \r\n       let reader = new FileReader(); // HTML5 FileReader API\r\n        let file = e.target.files[0];\r\n        setImageInput(file);\r\n        reader.readAsDataURL(file);\r\n\r\n         reader.onload = () => {\r\n        setImageUrl(reader.result );\r\n\r\n  }\r\n   }}\r\n    const ll = (e) => {\r\n        e.preventDefault()\r\n\r\n        db.collection('posts').add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            profilePic: user.photoURL,\r\n            username: user.displayName,\r\n            image: imageUrl\r\n        })\r\n\r\n\r\n        setInput('')\r\n        setImageInput(null)\r\n        setImageUrl('')\r\n    }\r\n   \r\n    return (\r\n        \r\n        <div className=\"messageSender\">\r\n            <div class=\"messageSender__top\">\r\n                <Avatar src={user.photoURL} />\r\n                <form>\r\n                    <input ref={inputFileRef} id='upload' hidden={true} type='file'  onChange={handleChange}/>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)}\r\n                        placeholder={`What's on your mind, ${user.displayName}?`} style={{width:\"100%\"}} />\r\n                 \r\n\r\n                    <button type=\"submit\" className='btn btn-outline-primary' onClick={handleSubmit}>Post Now</button>\r\n                </form>\r\n            \r\n            </div>\r\n            <div className='messageSender_image'style={{textAlign:\"center\"}} >\r\n                    <img src={imageUrl} style={{width:\"50%\"}}/>\r\n            </div>\r\n            <div class=\"messageSender__bottom\">\r\n                <div class=\"messageSender__option\">\r\n                    <VideocamIcon style={{ color: \"red\" }} />\r\n                    <h3>Live Video</h3>\r\n                </div><div class=\"messageSender__option\" onClick={onBtnClick} >\r\n                    <PhotoLibraryIcon style={{ color: \"green\" }} />\r\n                    <h3>Photo/Video</h3>\r\n                </div><div class=\"messageSender__option\">\r\n                    <InsertEmoticonIcon style={{ color: \"orange\" }} />\r\n                    <h3>Feeling/Activity</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageSender\r\n","import React,{useState} from 'react'\r\nimport \"./MessageSender.css\"\r\nimport { useStateValue } from './StateProvider';\r\nimport { Avatar } from '@material-ui/core'\r\nimport db from './firebase'\r\nimport {firebase} from \"./firebase\"\r\n\r\nexport default function AddComment({id}) {\r\n    console.log(\"__________\",id)\r\n    const [{ user }, dispatch] = useStateValue()\r\n    const [inpu, setInpu] = useState('')\r\n    const handleSubmit = (e)=> {\r\n              e.preventDefault()\r\n        db.collection('posts').doc(id).collection('comments').add({\r\n            comment: inpu,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            profilePic: user.photoURL,\r\n            username: user.displayName,\r\n        })\r\n        setInpu('')\r\n    \r\n    \r\n    }\r\n    return (\r\n     <div className=\"messageSender\" style={{margin:\"0\"}}>\r\n            <div class=\"messageSender__top\">\r\n                <Avatar src={user.photoURL} />\r\n                <form>\r\n                    <input value={inpu} onChange={(e) => setInpu(e.target.value)}\r\n                        placeholder={`Add Comment, ${user.displayName}?`} style={{width:\"100%\"}} />\r\n                 \r\n\r\n                    <button type='submit' className='btn btn-outline-primary' onClick={handleSubmit}>comment</button>\r\n                </form>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./Comment.css\"\r\nexport default function Comments({comment,\r\n            timestamp,\r\n            profilePic,\r\n            username,id}) {\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center py-2\" style={{width:\"100%\"}}>\r\n        <div className=\"second py-2 px-2\"> <span class=\"text1\">{comment}</span>\r\n            <div className=\"d-flex justify-content-between py-1 pt-2\">\r\n                <div><img src={profilePic} width=\"18\"/><span class=\"text2\">{username}</span></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n","import { Avatar } from '@material-ui/core'\r\nimport React,{useEffect,useState} from 'react'\r\nimport './Post.css'\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport NearMeIcon from '@material-ui/icons/NearMe';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport db from './firebase'\r\nimport AddComment from './AddComment'\r\nimport Comments from './Comments';\r\nimport {firebase} from \"./firebase\"\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Post({ id,profilePic, image, username, timestamp, message,likes }) {\r\n     const [comments, setComments] = useState([])\r\n    const [{ user }, dispatch] = useStateValue()\r\n    console.log(likes)\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').doc(id).collection('comments').onSnapshot((snapshot) =>\r\n            setComments(snapshot.docs.map((doc) => {\r\n                console.log(doc.data())\r\n                return { id: doc.id, data: doc.data() }\r\n            }))\r\n        )\r\n   \r\n    }, [])\r\n    const handleClickLike = (e)=>{\r\n              e.preventDefault()\r\n              db.collection('posts').doc(id).update({\r\n                  likes:firebase.firestore.FieldValue.arrayUnion(user.displayName)\r\n              })\r\n    }\r\n    const handleClickDislike = (e)=>{\r\n              e.preventDefault()\r\n              db.collection('posts').doc(id).update({\r\n                  likes:firebase.firestore.FieldValue.arrayRemove(user.displayName)\r\n              })\r\n    }\r\n    return (\r\n        \r\n        <div className='post'>\r\n            <div class=\"post__top\">\r\n                <Avatar src={profilePic} className='post__avatar' />\r\n                <div class=\"post__topInfo\">\r\n                    <h3>{username}</h3>\r\n                    <p>{new Date(timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"post__bottom\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div class=\"post__image\">\r\n                <img src={image} alt=\"\" />\r\n            </div>\r\n\r\n            <div class=\"post__options\">\r\n                \r\n                    {\r\n                        likes.includes(user.displayName)?  <><div class=\"post__option\" onClick={handleClickDislike}><ThumbUpIcon />\r\n                    <p>{likes.length} Dislike</p></div></> :  <><div class=\"post__option\" onClick={handleClickLike} ><ThumbUpIcon />\r\n                    <p>{likes.length} Like</p></div></>\r\n                    } \r\n                \r\n                <div class=\"post__option\">\r\n                    <ChatBubbleOutlineOutlinedIcon />\r\n                    <p>Comment</p>\r\n                </div>\r\n                <div class=\"post__option\">\r\n                    <NearMeIcon />\r\n                    <p>Share</p>\r\n                </div>\r\n                <div class=\"post__option\">\r\n                    <AccountCircleIcon />\r\n                    <ExpandMoreIcon />\r\n                </div>\r\n            </div>\r\n            <div class=\"post__comments\">\r\n              <AddComment \r\n              key={id}\r\n              id={id}\r\n              />  \r\n             {comments.map((comment) => (\r\n                <Comments\r\n                    key={comment.id}\r\n                    id={comment.id}\r\n                    profilePic={comment.data.profilePic}\r\n                    comment={comment.data.comment}\r\n                    timestamp={comment.data.timestamp}\r\n                    username={comment.data.username}\r\n                />\r\n            ))}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Feed.css';\r\nimport MessageSender from './MessageSender';\r\nimport Post from './Post';\r\nimport db from './firebase'\r\n\r\nfunction Feed() {\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').orderBy('timestamp', 'desc').onSnapshot((snapshot) =>\r\n            setPosts(snapshot.docs.map((doc) => {\r\n                return { id: doc.id, data: doc.data() }\r\n            }))\r\n        )\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"feed\">\r\n            <MessageSender />\r\n\r\n            {posts.map((post) => (\r\n                <Post\r\n                    key={post.id}\r\n                    id={post.id}\r\n                    profilePic={post.data.profilePic}\r\n                    message={post.data.message}\r\n                    timestamp={post.data.timestamp}\r\n                    username={post.data.username}\r\n                    image={post.data.image}\r\n                    likes={post.data.likes}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FlagIcon from '@material-ui/icons/Flag';\r\nimport SubscriptionsOutlinedIcon from '@material-ui/icons/SubscriptionsOutlined';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Header() {\r\n    const [{ user }, dispatch] = useStateValue()\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Facebook_f_logo_%282019%29.svg/1200px-Facebook_f_logo_%282019%29.svg.png\" alt=\"\" />\r\n                <div className=\"header__input\">\r\n                    <SearchIcon />\r\n                    <input type=\"text\" placeholder=\"Search Facebook\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"header__center\">\r\n                <div className=\"header__option header__option--active\">\r\n                    <HomeIcon fontSize=\"large\" />\r\n                </div>\r\n                <div className=\"header__option\">\r\n                    <FlagIcon fontSize=\"large\" />\r\n                </div>\r\n                <div className=\"header__option\">\r\n                    <SubscriptionsOutlinedIcon fontSize=\"large\" />\r\n                </div>\r\n                <div className=\"header__option\">\r\n                    <StoreIcon fontSize=\"large\" />\r\n                </div>\r\n                <div className=\"header__option\">\r\n                    <SupervisedUserCircleIcon fontSize=\"large\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <div class=\"header__info\">\r\n                    <Avatar src={user.photoURL} />\r\n                    <h4>{user.displayName}</h4>\r\n                </div>\r\n                <IconButton>\r\n                    <AddIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <ForumIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsActiveIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","export const initialState = {\r\n    user: null\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_USER: 'SET_USER'\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(actionTypes)\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './Login.css'\r\nimport { auth, provider } from './firebase'\r\nimport { actionTypes } from './Reducer'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Login() {\r\n    const [state, dispatch] = useStateValue()\r\n\r\n    const signIn = () => {\r\n        // sign In\r\n        auth.signInWithPopup(provider)\r\n            .then(result => {\r\n\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n                console.log(result.user);\r\n            }).catch((error) => alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__logo\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Facebook_f_logo_%282019%29.svg/1200px-Facebook_f_logo_%282019%29.svg.png\" alt=\"\" />\r\n                <img src=\"https://www.logo.wine/a/logo/Facebook/Facebook-Logo.wine.svg\" alt=\"\" />\r\n\r\n                <Button type=\"submit\" onClick={signIn}>\r\n                    Sign In With Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './SidebarRow.css'\r\nimport { Avatar } from '@material-ui/core'\r\n\r\nfunction SidebarRow({ src, Icon, title }) {\r\n    return (\r\n        <div className=\"sidebarRow\">\r\n            {src && <Avatar src={src} />}\r\n            {Icon && <Icon />}\r\n\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarRow\r\n","import React from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarRow from './SidebarRow'\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport EmojiFlagsIcon from '@material-ui/icons/EmojiFlags';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport VideoLibraryIcon from '@material-ui/icons/VideoLibrary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n    const [{ user }, dispatch] = useStateValue()\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <SidebarRow src={user.photoURL} title={user.displayName} />\r\n\r\n            <SidebarRow Icon={LocalHospitalIcon} title='COVID_19 Information Center' />\r\n            <SidebarRow Icon={EmojiFlagsIcon} title='Pages' />\r\n            <SidebarRow Icon={PeopleIcon} title='Friends' />\r\n            <SidebarRow Icon={ChatIcon} title='Messenger' />\r\n            <SidebarRow Icon={StoreIcon} title='Marketplace' />\r\n            <SidebarRow Icon={VideoLibraryIcon} title='Videos' />\r\n            <SidebarRow Icon={ExpandMoreIcon} title='More' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './Widgets.css'\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className=\"widgets\">\r\n            <iframe src=\"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2FCleverProgrammerr%2F&amp;tabs=timeline&amp;width=340&amp;height=1500&amp;small_header=false&amp;adapt_container_width=true&amp;hide_cover=false&amp;show_facepile=true&amp;appId\"\r\n                title=\"Clever Programmer Fb Page\"\r\n                width=\"340\"\r\n                height=\"100%\"\r\n                style={{ border: 'none', overflow: 'hidden' }}\r\n                scrolling=\"no\"\r\n                frameborder=\"0\"\r\n                allowtransparency=\"true\"\r\n                allow=\"encrypted-media\"\r\n            ></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Feed from './Feed';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\nimport Sidebar from './Sidebar';\r\nimport { useStateValue } from './StateProvider';\r\nimport Widgets from './Widgets';\r\n\r\nfunction App() {\r\n  const [{ user }, dispatch] = useStateValue()\r\n\r\n  return (\r\n    // Bem \r\n    <div className=\"app\">\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n          <>\r\n            <Header />\r\n\r\n            <div className=\"app__body\">\r\n              <Sidebar />\r\n              <Feed />\r\n              <Widgets />\r\n            </div>\r\n          </>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { StateProvider } from './StateProvider';\r\nimport reducer, { initialState } from './Reducer';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      <App />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}